ros_pc_subscriber:
  type: ecto_sensor_msgs::Subscriber_PointCloud2
  inputs:
    {}
  $queue_size: 2
  topic_name: /camera/depth_registered/points
#  $topic_name: /camera/depth_registered/points_throttle
#  $topic_name: /camera_depth_optical_frame/pointcloud
Message2PointCloud:
  type: ecto_rbo_pcl::Message2PointCloud
  inputs:
    input: ros_pc_subscriber/output
#  $format: 0
normal_estimation:
  type: ecto::pcl::PclCell<ecto_rbo_pcl::NormalEstimationIntegral>
  inputs:
    input: crop_box/output
  $estimation_method: 0
  $max_depth_change_factor: 0.00999999977648258
  $smoothing_size: 15
crop_box:
  type: ecto::pcl::PclCell<ecto_rbo_pcl::PassThroughOrganized>
  inputs:
    input: Message2PointCloud/output
  $filter_field_name: z
  $filter_limit_min: 0
  $filter_limit_max: 2.0
flood_fill:
  type: ecto::pcl::PclCellWithNormals<ecto_rbo_pcl::FloodFill>
  inputs:
    input: crop_box/output
    normals: normal_estimation/output
  angular_threshold: 0.32359879
  curvature_distance_threshold: 0.07
  curvature_threshold: 0.037
  distance_threshold: 0.05
  min_inliers: 50
  normal_distance_threshold: 0.12
  rviz_prefix: flood_fill_segmentation
filter_wall_by_size:
  type: ecto::pcl::PclCell<ecto_rbo_pcl::FilterClustersBySize>
  inputs:
    input: crop_box/output
    clusters: filter_by_distance/filtered_clusters
  max_volume: 0.004
#  max_volume: 1.05
  min_volume: 0.
  filter_criterion: 1
  max_distance: 0.2
  min_size: 1000
  max_size: 100000

filter_wall_by_normal:
  type: ecto::pcl::PclCellWithNormals<ecto_rbo_pcl::FilterClustersByNormals>
  inputs:
    input: crop_box/output
    normals: normal_estimation/output
    clusters: filter_wall_by_size/filtered_clusters
    transform: plane_fits/transform_biggest
  max_distance: 20.0
  negate: true
filter_object_by_size:
  type: ecto::pcl::PclCell<ecto_rbo_pcl::FilterClustersBySize>
  inputs:
    input: crop_box/output
    clusters: filter_by_distance/filtered_clusters
  max_volume: 0.004
#  max_volume: 1.05
  min_volume: 0.
  filter_criterion: 1
  max_distance: 0.2
  min_size: 120
  max_size: 1000
filter_by_distance:
  type: ecto::pcl::PclCell<ecto_rbo_pcl::FilterClustersBySize>
  inputs:
    input: crop_box/output
    clusters: flood_fill/clusters
    transform: plane_fits/transform_biggest
  max_volume: 0.004
#  max_volume: 1.05
  min_volume: 0.
  filter_criterion: 2
  max_distance: 0.4
  min_size: 200
  max_size: 1000
calculate_centroids:
  type: ecto::pcl::PclCell<ecto_rbo_pcl::Centroid>
  inputs:
    input: crop_box/output
    clusters: filter_object_by_size/filtered_clusters

tf_to_vector:
  type: ecto_rbo_pcl::TF2Vector
  inputs:
    transform: plane_fits/transform_biggest
  column_index: 2
  negate: true
tf_to_vector2:
  type: ecto_rbo_pcl::TF2Vector
  inputs:
    transform: wall_fit/transform_biggest
  column_index: 2
  negate: false
wrap_in_vector:
  type: ecto_rbo_pcl::WrapVector3fInVector
  inputs:
    input: tf_to_vector/vector
wrap_in_vector2:
  type: ecto_rbo_pcl::WrapVector3fInVector
  inputs:
    input: tf_to_vector2/vector
create_centroid_grasps:
  type: ecto_rbo_grasping::CreateGrasps
  inputs:
    header: Message2PointCloud/header
    positions: calculate_centroids/centroids
    approach_vectors: wrap_in_vector/vector
    roll_vectors: wrap_in_vector2/vector
publish_grasps:
  type: ecto_rbo_grasping::PublishGrasps
  inputs:
     pregrasp_messages_ptr: create_centroid_grasps/pregrasp_messages

wall_fit:
  type: ecto::pcl::PclCellWithNormals<ecto_rbo_pcl::PlaneFits>
  inputs:
    input: crop_box/output
    clusters: filter_wall_by_normal/filtered_clusters
#    clusters: multiplanes/planes
    normals: normal_estimation/output
  distance_threshold: 10.05
  max_size: 10.24
  min_boxness: 0.0
  min_inlier_ratio: 0.0
  min_size: 0.00
  weight_contour: 0.0
  polygon_approximation_epsilon: 10.0
tf_send_1:
  type: ecto_rbo_pcl::BroadcastTF
  inputs:
    transform: wall_fit/transform_biggest
  source_frame: camera_rgb_optical_frame
  target_frame: wall

plane_fits:
  type: ecto::pcl::PclCellWithNormals<ecto_rbo_pcl::PlaneFits>
  inputs:
    input: crop_box/output
    clusters: flood_fill/clusters
#    clusters: multiplanes/planes
    normals: normal_estimation/output
  $distance_threshold: 10.05
  $max_size: 10.24
  $min_boxness: 0.0
  $min_inlier_ratio: 0.0
  $min_size: 0.00
  $weight_contour: 0.0
  $polygon_approximation_epsilon: 10.0
tf_send_2:
  type: ecto_rbo_pcl::BroadcastTF
  inputs:
    transform: plane_fits/transform_biggest
  source_frame: camera_rgb_optical_frame
  target_frame: table
